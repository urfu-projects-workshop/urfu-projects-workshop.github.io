var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(n){const s=suggestions.classList.contains("d-none");if(s)return;const e=[...suggestions.querySelectorAll("a")];if(e.length===0)return;const t=e.indexOf(document.activeElement);if(n.key==="ArrowUp"){n.preventDefault();const s=t>0?t-1:0;e[s].focus()}else if(n.key==="ArrowDown"){n.preventDefault();const s=t+1<e.length?t+1:t;e[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/introduction/",title:"Введение",description:"Prologue Doks.",content:""}).add({id:1,href:"/docs/introduction/about/",title:"Общая информация",description:'Общая информация о системе "ПроКомпетенции"',content:"🚧 \rРаздел находится в разработке \r\r"}).add({id:2,href:"/docs/introduction/links/",title:"Основные ссылки",description:"Основные полезные ссылки",content:"🚧 \rРаздел находится в разработке \r\r"}).add({id:3,href:"/docs/development/frontend-startup/",title:"Запуск Frontend",description:"Запуск Frotnend проекта",content:"Подготовка #\rДля начала вам нужно скачать и установить все необходимые программы: Node, NPM (устанавливается вместе с Node), Git, Visual Studio Code (или другая IDE).\nДалее нужно склонировать к себе проект из репозитория. Это можно сделать через команду git clone в терминале (консоли). Кроме того, можно это сделать напрямую из IDE. Например, в Visual Studio Code нужно нажать F1 и вводить команду в открывшееся окно:  Установка зависимостей #\rПосле того, как вы склонировали репозиторий к себе на компьютер, нам нужно установить необходимые зависимости через NPM. Для этого вам нужно в терминале (консоли) ввести команду npm install и подождать, пока NPM установит необходимые пакеты. Рекомендуется использовать Node версии 12 или выше.\nЗапуск проекта #\rДля запуска проекта в терминале (консоли) вы должны ввести команду npm start и подождать, пока проект соберется. После успешного запуска у вас появится следующее сообщение:  Теперь вам нужно перейти в браузере на страницу http://localhost:8080/, где будет запущена локальная версия клиентской части системы.\nИскусственные данные #\rДля независимой разработки frontend части нашего приложения мы используем искусственные данные, которые хранятся в папке src/app/provider/fake-data. Это значит, что никакие запросы к серверу не отправляются, а данные не меняются. Все отправленные запросы просто печатаются в консоль браузера. Из-за этого некоторые функции (например, редактирование проекта или профиля пользователя) будут работать частично, так как результаты выполнения соответствующих запросов меняют данные. Впрочем, для разработки frontend части этого вполне достаточно.\nПереключение ролей пользователей #\rРоль авторизованного пользователя можно переключить в файле src/app/provider/fake-provider/user.tsx. Если у вас отображается главная страница, то это значит, что вы не зашли в аккаунт пользователя. Поскольку мы используем искусственные данные, то вам достаточно перейти на страницу \u0026ldquo;Вход\u0026rdquo; и ввести любые данные. После того, как вы нажмете кнопку \u0026ldquo;Войти\u0026rdquo;, вы автоматически войдете в систему с выбранной ролью пользователя.\n"}).add({id:4,href:"/docs/development/backend-startup/",title:"Запуск Backend",description:"Запуск Backend проекта",content:"Необходимые ссылки #\rСсылка на тестовую базу данных. Данные для учетной записи администратора и эксперта есть в описании файла.\nСкачать MS SQL Server Express 2019.\nСкачать SQL Server Management Studio.\nПодготовка #\rДля начала вам нужно скачать и установить все необходимые программы: VisualStudio, MS SQL Server Express 2019, MS SQL Server Management Studio, Git. Далее нужно склонировать к себе проект из репозитория. Это можно сделать через команду git clone или напрямую из Visual Studio:  Запуск базы данных #\rПосле того, как вы скачали базу данных с Google Диска, а также установили MS SQL Server, вам нужно зайти в MS SQL Server Management Studio (настройки входа менять не нужно):  Далее нужно восстановить базу данных:  В открывшемся окне выбираете Устройство и указываете путь до базы данных:  Проверьте, чтобы у базы данных было имя workshop.\nЗапуск проекта #\rС запуском проекта никаких сложностей у вас возникнуть не должно, если вы знакомы с C# и работали раньше в VisualStudio (или Rider). Важно! модель данных в тестовой базе может быть устаревшей! Из-за этого у вас могут не работать некоторые методы API. Чтобы это исправить, вам нужно обновить свою базу данных с учетом всех миграций. Это делается всего одной командой через \u0026ldquo;Консоль менеджера пакетов\u0026rdquo; в Visual Studio (в Raider это делается иначе). В эту консоль вам нужно ввести команду Update-Database:  После этого всё должно работать правильно. Если вы скачали актуальную версию тестовой базы данных с Google Диска, то модель данных обновлять не нужно.\nКак выполнять методы с авторизацией #\rУдалив из адресной строки браузера выделенную часть (т.е. перейдя в корень страницы):  Откроется обычный интерфейс нашего сервиса. Там вам нужно авторизоваться с существующей учётной записью, или вы можете создать новую.\n"}).add({id:5,href:"/docs/development/testing-preparation/",title:"Подготовка к тестированию",description:"Подготовка к тестированию системы",content:"тест.прокомпетенции.рф #\rВсё тестирования мы будем проводить на тестовой версии системы. Она полностью совпадает с версией системы, которую мы используем для УрФУ. На ней вы можете добавлять новых пользователей, события, проекты и т.д. Здесь используется тестовая база данных, поэтому вы можете делать любые действия с данными, которые будут необходимы. Если потребуется обновление базы данных, то напишите мне (Telegram: @danil_kuk).\nТестовые учетные записи #\r   Роль Логин Пароль     Администратор test-admin Test123   Эксперт test-expert Test123    Для тестирования системы от роли Студент нужно просто создать новую учетную запись.\nТестирование методов API #\rДля тестирования методов API нужно использовать Swagger спецификацию. В неё можно попасть добавив в адресную строку браузера следующий путь: /swagger/index.html.\nДля тестирования достаточно выбрать метод для тестирования и выполнить его, нажав на соответствующую кнопку. Обратите внимание, что большинство методов требуют авторизации пользователя в системе. Кроме того, некоторые методы доступны только пользователям с определенной ролью.\nТаблица для загрузки проектов #\rДля тестирования функции загрузки проектов вы можете использовать нашу таблицу с проектами в весеннем семестре 2021 года. Её можно найти в папке на Google Диске. Для загрузки в систему таблицу нужно скачать в формате XLSX.\n"}).add({id:6,href:"/docs/design/mockups/",title:"Макеты интерфейса",description:"Запуск Frotnend проекта",content:"🚧 \rРаздел находится в разработке \r\r"}).add({id:7,href:"/docs/design/base-elements/",title:"Основные элементы",description:"Основные элементы пользовательского интерфейса системы",content:"🚧 \rРаздел находится в разработке \r\r"}).add({id:8,href:"/docs/analytics/basics/",title:"Основная информация",description:"Основная информация для аналитиков",content:"🚧 \rРаздел находится в разработке \r\r"}).add({id:9,href:"/docs/help/faq/",title:"FAQ",description:"Ответы на часто возникающие вопросы",content:"🚧 \rРаздел находится в разработке \r\r"}).add({id:10,href:"/docs/help/contacts/",title:"Контакты",description:"Контакты",content:"Кукряков Данил (@danil-kuk) #\rТехнический менеджер проекта. Главный frontend и backend разработчик.\nВопросы можете написать мне в Telegram: @danil_kuk #\r"}).add({id:11,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}).add({id:12,href:"/docs/analytics/",title:"Аналитика",description:"Информация для аналитиков системы",content:""}).add({id:13,href:"/docs/design/",title:"Дизайн",description:"Информация про дизайн системы",content:""}).add({id:14,href:"/docs/help/",title:"Помощь",description:"Дополнительный раздел с помощью",content:""}).add({id:15,href:"/docs/development/",title:"Разработка",description:"Информация про разработку",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()